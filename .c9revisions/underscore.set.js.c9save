{"ts":1342482096852,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"//requires underscore.js & JSON.js\n/*\n * This is a functional implementation of a SET\n * adding and removing from sets do not overwrite previous values of the set\n */\nvar _ = require('./underscore');\nfunction Set(initial_items){\n    if(initial_items && !_.isObject(initial_items)){\n\tthrow \"the set must be given a list of initial items, or empty arguments\"\n    }\n    function initialize_items(initial_items){\n\treturn _.chain(initial_items || [])\n\t.map(JSON.stringify) //make hashes\n\t.zip(initial_items) //pair hashes with items\n\t.unique(false,_.first) //not sorted\n\t.reduce(function(list,item_hash_pair){\n\t\t    var hash = item_hash_pair[0];\n\t\t    var item = item_hash_pair[1];\n\t\t    list[hash] = item;\n\t\t    return list;\n\t\t},{})\n\t.value();\n    }\n\n    return (function Trusted_Set(set_items, passed_values){\n\t   var items = set_items;\n\t   return {\n\t       add:function(item){\n\t\t   var item_hash = JSON.stringify(item); //only works for sets\n\t\t   var new_set = _.clone(items);\n\t\t   new_set[item_hash] = item;\n\t\t   return Trusted_Set(new_set);\n\t       },\n\t       remove:function(item){\n\t\t   var item_hash = JSON.stringify(item); //only works for sets\n\t\t   var new_set = _.clone(items);\n\t\t   delete new_set[item_hash];\n\t\t   return Trusted_Set(new_set);\n\t       },\n\t       exists:function(item){\n\t\t   var item_hash = JSON.stringify(item); //only works for sets\n\t\t   return _.has(items,item_hash);\n\t       },\n\t       list:function(){\n\t\t   return _.values(items);\n\t       }\n\t   }\n       })\n    (initialize_items(initial_items || []))\n}\nmodule.exports = Set;"]],"start1":0,"start2":0,"length1":0,"length2":1550}]],"length":1550}
{"contributors":[],"silentsave":true,"ts":1345821061980,"patch":[[{"diffs":[[0,"core');\n"],[1,"\n"],[0,"function"]],"start1":192,"start2":192,"length1":16,"length2":17},{"diffs":[[0,"ems)"],[1," "],[0,"{\n    if"],[1," "],[0,"(ini"]],"start1":224,"start2":224,"length1":16,"length2":18},{"diffs":[[0,"_items))"],[1," "],[0,"{\n"],[-1,"\t"],[1,"        "],[0,"throw \"t"]],"start1":275,"start2":275,"length1":19,"length2":27},{"diffs":[[0,"ents\"\n    }\n"],[1,"\n"],[0,"    function"]],"start1":362,"start2":362,"length1":24,"length2":25},{"diffs":[[0,"l_items)"],[1," "],[0,"{\n"],[-1,"\t"],[1,"        "],[0,"return _"]],"start1":411,"start2":411,"length1":19,"length2":27},{"diffs":[[0,"s || [])"],[-1,"\n\t"],[0,".map(JSO"]],"start1":457,"start2":457,"length1":18,"length2":16},{"diffs":[[0," hashes\n"],[-1,"\t"],[1,"        "],[0,".zip(ini"]],"start1":492,"start2":492,"length1":17,"length2":24},{"diffs":[[0,"h items\n"],[-1,"\t"],[1,"        "],[0,".unique("]],"start1":545,"start2":545,"length1":17,"length2":24},{"diffs":[[0,"e(false,"],[1," "],[0,"_.first)"]],"start1":567,"start2":567,"length1":16,"length2":17},{"diffs":[[0," sorted\n"],[-1,"\t"],[1,"        "],[0,".reduce("]],"start1":590,"start2":590,"length1":17,"length2":24},{"diffs":[[0,"on(list,"],[1," "],[0,"item_has"]],"start1":620,"start2":620,"length1":16,"length2":17},{"diffs":[[0,"sh_pair)"],[1," "],[0,"{\n"],[-1,"\t\t"],[1,"        "],[0,"    var "]],"start1":636,"start2":636,"length1":20,"length2":27},{"diffs":[[0,"air[0];\n"],[-1,"\t\t"],[1,"        "],[0,"    var "]],"start1":681,"start2":681,"length1":18,"length2":24},{"diffs":[[0,"air[1];\n"],[-1,"\t\t"],[1,"        "],[0,"    list"]],"start1":723,"start2":723,"length1":18,"length2":24},{"diffs":[[0,"= item;\n"],[-1,"\t\t"],[1,"        "],[0,"    retu"]],"start1":754,"start2":754,"length1":18,"length2":24},{"diffs":[[0,"st;\n"],[-1,"\t\t"],[1,"        "],[0,"},"],[1," "],[0,"{})"],[-1,"\n\t"],[0,".val"]],"start1":783,"start2":783,"length1":17,"length2":22},{"diffs":[[0,"_values)"],[1," "],[0,"{\n"],[-1,"\t"],[1,"     "],[0,"   var i"]],"start1":868,"start2":868,"length1":19,"length2":24},{"diffs":[[0,"_items;\n"],[-1,"\t"],[1,"     "],[0,"   retur"]],"start1":902,"start2":902,"length1":17,"length2":21},{"diffs":[[0,"n {\n"],[-1,"\t"],[1,"  "],[0,"       "],[1,"   "],[0,"add:"],[1," "],[0,"func"]],"start1":923,"start2":923,"length1":20,"length2":25},{"diffs":[[0,": function(item)"],[1," "],[0,"{\n"],[-1,"\t\t"],[1,"             "],[0,"   var item_hash"]],"start1":942,"start2":942,"length1":36,"length2":48},{"diffs":[[0," works for sets\n"],[-1,"\t\t"],[1,"             "],[0,"   var new_set ="]],"start1":1021,"start2":1021,"length1":34,"length2":45},{"diffs":[[0,"items);\n"],[-1,"\t\t"],[1,"             "],[0,"   new_s"]],"start1":1075,"start2":1075,"length1":18,"length2":29},{"diffs":[[0,"= item;\n"],[-1,"\t\t"],[1,"            "],[0,"   "],[1," "],[0,"return T"]],"start1":1118,"start2":1118,"length1":21,"length2":32},{"diffs":[[0,"d_Set(new_set);\n"],[-1,"\t"],[1,"     "],[0,"       },\n\t     "]],"start1":1155,"start2":1155,"length1":33,"length2":37},{"diffs":[[0," },\n"],[-1,"\t"],[1,"    "],[0,"       "],[1," "],[0,"remove:"],[1," "],[0,"func"]],"start1":1182,"start2":1182,"length1":23,"length2":28},{"diffs":[[0,": function(item)"],[1," "],[0,"{\n"],[-1,"\t\t"],[1,"             "],[0,"   var item_hash"]],"start1":1204,"start2":1204,"length1":36,"length2":48},{"diffs":[[0,"or sets\n"],[-1,"\t\t"],[1,"             "],[0,"   var n"]],"start1":1291,"start2":1291,"length1":18,"length2":29},{"diffs":[[0,"items);\n"],[-1,"\t\t"],[1,"             "],[0,"   delet"]],"start1":1337,"start2":1337,"length1":18,"length2":29},{"diffs":[[0,"_hash];\n"],[-1,"\t\t"],[1,"             "],[0,"   retur"]],"start1":1380,"start2":1380,"length1":18,"length2":29},{"diffs":[[0,"w_set);\n"],[-1,"\t"],[1,"     "],[0,"       }"]],"start1":1425,"start2":1425,"length1":17,"length2":21},{"diffs":[[0,"         },\n"],[-1,"\t"],[1,"     "],[0,"       exist"]],"start1":1436,"start2":1436,"length1":25,"length2":29},{"diffs":[[0," exists:"],[1," "],[0,"function"]],"start1":1459,"start2":1459,"length1":16,"length2":17},{"diffs":[[0,"on(item)"],[1," "],[0,"{\n"],[-1,"\t\t"],[1,"             "],[0,"   var i"]],"start1":1474,"start2":1474,"length1":20,"length2":32},{"diffs":[[0,"or sets\n"],[-1,"\t\t"],[1,"             "],[0,"   retur"]],"start1":1553,"start2":1553,"length1":18,"length2":29},{"diffs":[[0,"s(items,"],[1," "],[0,"item_has"]],"start1":1588,"start2":1588,"length1":16,"length2":17},{"diffs":[[0,"h);\n"],[-1,"\t"],[1,"    "],[0,"       "],[1," "],[0,"},\n"],[-1,"\t"],[1,"     "],[0,"    "]],"start1":1605,"start2":1605,"length1":20,"length2":28},{"diffs":[[0,"   list:"],[1," "],[0,"function"]],"start1":1633,"start2":1633,"length1":16,"length2":17},{"diffs":[[0,"on()"],[1," "],[0,"{\n"],[-1,"\t\t"],[1,"             "],[0,"   r"]],"start1":1648,"start2":1648,"length1":12,"length2":24},{"diffs":[[0,"s);\n"],[-1,"\t"],[0,"       "],[-1,"}\n\t"],[1," "],[0,"   "],[1," "],[0,"}\n  "]],"start1":1691,"start2":1691,"length1":22,"length2":20},{"diffs":[[0,"    "],[1," "],[0,"}"],[-1,")"],[0,"\n    "],[1,"})"],[0,"(ini"]],"start1":1712,"start2":1712,"length1":15,"length2":17},{"diffs":[[0,"s = Set;"],[1,"\n//testing git on cloud9 again"]],"start1":1780,"start2":1780,"length1":8,"length2":38}]],"length":1818,"saved":false}
